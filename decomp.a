; ACME 0.96.4
; 
; OLDSKOOL FORT ET VERT
; SHADOW PARTY 2021 VERSION
;
; CODE: GROUiK / [FRENCH TOUCH]
; MUSIC: DUBMOOD + ZOOM
;
; 05/2021
;
; v0.03 - add "jingle"
; v0.02 - add mini display while unpacking
; v0.01 - first commit
; 
!cpu 6502
!convtab "a2txt.bin" ; 
!sl "lbl_decomp.txt"

!source "lbl_main.txt"

		*= $1000 ; ORG

; =============================================================================
; ZERO PAGE / decomp LZ4 (use usual free addresses in ZP)
src1        	= $06   	; +$07
src2        	= $08   	; +$09
dest        	= $CE   	; +$CF
lenL        	= $EB
lenH        	= $EC
token       	= $ED
index		= $D7
; =============================================================================
START
!zone
		; jingle
		LDY #$D0
-		BIT $C030
		LDA #$09
		JSR $FCA8
		DEY
		BNE -
		LDX #02
		STX token
--		LDY #$D0
-		BIT $C030
.MODJING		LDA #$07
		JSR $FCA8
		DEY
		BNE -
		LDA #$05
		STA .MODJING+1
		DEC token
		BNE --
		; -----------------
		
		; LDY #00
		STY lenH
		STY lenL
		LDA #<(COMPDATA+16)    		; shunte LZ4 header
            	STA src2
            	LDA #>(COMPDATA+16)
            	STA src2+1
            	LDA #<DECOMP_ADD
            	STA dest            
            	LDA #>DECOMP_ADD
            	STA dest+1
		LDA #03
		STA index

.BP
          	jsr .GET_BYTE                  
                  	sta token
               	lsr
               	lsr
               	lsr
               	lsr
                  	beq .read_offset                     ; there is no literal
                  	cmp #$0f
                  	jsr .getLength
                  	
.b_literals         jsr .GET_BYTE
                  	jsr .store
                  	bne .b_literals
                  	
.read_offset       	jsr .GET_BYTE
                  	tax
                  	sec
                  	eor #$ff
                  	adc dest
                  	sta src1
                  	txa
                  	php							
                  	jsr .GET_BYTE
                  	plp
                  	bne .not_done
                  	tax
                  	BNE .not_done			
		JMP MAIN				; .unlz4_done 
.not_done          	eor #$ff
                  	adc dest+1
                  	sta src1+1
                  	; c=1
		lda token
                  	and #$0f
                  	adc #$03                            	; 3+1=4
                  	cmp #$13
                  	jsr .getLength

.b1                 
                    lda (src1),Y
          
                  	INC src1
                  	BNE .s1
                  	INC src1+1
.s1                 jsr .store
                  	bne .b1
                  	jmp .BP                  

.store             	sta (dest),Y
                  	INC dest
                  	BNE .s2
 		INC dest+1
		; display
		LDY index 
		LDA DIS,Y
	        	STA $400
		DEC index
		BPL +
		LDY #03
		STY index
+		LDY #00
		; -------      	
.s2                 dec lenL
                  	BNE +
                  	dec lenH
+		rts

.getLength_next    	jsr .GET_BYTE
                  	tax
                  	clc
	          adc lenL
                  	bcc .s3
                  	inc lenH
.s3   	          inx

.getLength         	sta lenL
                  	beq .getLength_next
                  	tax
                  	beq .s4
                  	inc lenH
.s4 	          rts

		
.GET_BYTE		LDA (src2),Y
		INC src2		
		BEQ .s5
		RTS					
.s5		INC src2+1			
		RTS
; -----------------------------------------------------------------------------
DIS		!byte $DC,$AD,$AF,$A1
; =============================================================================
COMPDATA

!binary "main.b.lz4"